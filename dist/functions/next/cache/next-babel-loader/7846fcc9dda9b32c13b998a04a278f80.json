{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Fragment } from 'react';\nimport Link from 'next/link';\nimport { ListWrapper } from './list.style';\n\nconst List = (_ref) => {\n  let {\n    className,\n    icon,\n    text,\n    link\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"icon\", \"text\", \"link\"]);\n\n  return __jsx(ListWrapper, {\n    className: className\n  }, link ? __jsx(Link, {\n    href: link\n  }, __jsx(\"a\", null, icon, text)) : __jsx(Fragment, null, icon, text));\n};\n\nexport default List;","map":null,"metadata":{},"sourceType":"module"}