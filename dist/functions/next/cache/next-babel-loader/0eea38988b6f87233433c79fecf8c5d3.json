{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport NavbarStyle from './navbar.style';\n\nconst Navbar = (_ref) => {\n  let {\n    className,\n    children,\n    navbarStyle\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\", \"navbarStyle\"]);\n\n  // Add all classs to an array\n  const addAllClasses = ['reusecore__navbar']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(NavbarStyle, _extends({\n    className: addAllClasses.join(' ')\n  }, props), children);\n};\n\n/** Navbar default proptype */\nNavbar.defaultProps = {};\nexport default Navbar;","map":null,"metadata":{},"sourceType":"module"}