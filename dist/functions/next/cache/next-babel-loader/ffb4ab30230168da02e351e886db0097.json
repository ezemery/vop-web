{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Icon from 'react-icons-kit';\nimport Box from 'common/src/components/Box';\nimport Text from 'common/src/components/Text';\nimport Heading from 'common/src/components/Heading';\nimport Button from 'common/src/components/Button';\nimport Container from 'common/src/components/UI/Container';\nimport GlideCarousel from 'common/src/components/GlideCarousel';\nimport GlideSlide from 'common/src/components/GlideCarousel/glideSlide';\nimport { MONTHLY_PRICING_TABLE, YEARLY_PRICING_TABLE } from 'common/src/data/Saas';\nimport PricingTable, { PricingHead, PricingPrice, PricingButton, PricingList, ListItem, PricingButtonWrapper } from './pricing.style';\nimport { checkmark } from 'react-icons-kit/icomoon/checkmark';\n\nconst PricingSection = ({\n  sectionWrapper,\n  row,\n  col,\n  secTitleWrapper,\n  secHeading,\n  secText,\n  nameStyle,\n  descriptionStyle,\n  priceStyle,\n  priceLabelStyle,\n  buttonStyle,\n  buttonFillStyle,\n  listContentStyle\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    data: MONTHLY_PRICING_TABLE,\n    active: true\n  });\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    setTimeout(function () {\n      setLoading(true);\n    }, 500);\n  });\n  const data = state.data;\n  const activeStatus = state.active;\n  const pricingCarouselOptions = {\n    type: 'slider',\n    perView: 3,\n    gap: 30,\n    bound: true,\n    breakpoints: {\n      1199: {\n        perView: 2,\n        type: 'carousel',\n        peek: {\n          before: 100,\n          after: 100\n        }\n      },\n      990: {\n        type: 'carousel',\n        perView: 1,\n        peek: {\n          before: 160,\n          after: 160\n        }\n      },\n      767: {\n        type: 'carousel',\n        perView: 1,\n        peek: {\n          before: 80,\n          after: 80\n        }\n      },\n      575: {\n        type: 'carousel',\n        perView: 1,\n        gap: 15,\n        peek: {\n          before: 20,\n          after: 20\n        }\n      }\n    }\n  };\n  return __jsx(Box, _extends({}, sectionWrapper, {\n    id: \"pricing_section\"\n  }), __jsx(Container, null, __jsx(Box, secTitleWrapper, __jsx(Text, secText), __jsx(Heading, secHeading), __jsx(PricingButtonWrapper, null, __jsx(Button, {\n    title: \"Monthly Plan\",\n    className: activeStatus ? 'active-item' : '',\n    onClick: () => setState({\n      data: MONTHLY_PRICING_TABLE,\n      active: true\n    })\n  }), __jsx(Button, {\n    title: \"Annual Plan\",\n    className: activeStatus === false ? 'active-item' : '',\n    onClick: () => setState({\n      data: YEARLY_PRICING_TABLE,\n      active: false\n    })\n  }))), __jsx(Box, row, __jsx(GlideCarousel, {\n    carouselSelector: \"pricing-carousel\",\n    options: pricingCarouselOptions,\n    controls: false\n  }, __jsx(React.Fragment, null, data.map((pricingTable, index) => __jsx(GlideSlide, {\n    key: `pricing-table-${index}`\n  }, __jsx(PricingTable, {\n    freePlan: pricingTable.freePlan,\n    className: \"pricing_table\"\n  }, __jsx(PricingHead, null, __jsx(Heading, _extends({\n    content: pricingTable.name\n  }, nameStyle)), __jsx(Text, _extends({\n    content: pricingTable.description\n  }, descriptionStyle))), __jsx(PricingPrice, null, __jsx(Text, _extends({\n    content: pricingTable.price\n  }, priceStyle)), __jsx(Text, _extends({\n    content: pricingTable.priceLabel\n  }, priceLabelStyle))), __jsx(PricingButton, null, __jsx(Link, {\n    href: pricingTable.url\n  }, __jsx(\"a\", null, pricingTable.freePlan ? __jsx(Button, _extends({\n    title: pricingTable.buttonLabel\n  }, buttonStyle)) : __jsx(Button, _extends({\n    title: pricingTable.buttonLabel\n  }, buttonFillStyle))))), __jsx(PricingList, null, pricingTable.listItems.map((item, index) => __jsx(ListItem, {\n    key: `pricing-table-list-${index}`\n  }, __jsx(Icon, {\n    icon: checkmark,\n    className: \"price_list_icon\",\n    size: 13\n  }), __jsx(Text, _extends({\n    content: item.content\n  }, listContentStyle)))))))))))));\n};\n\nPricingSection.defaultProps = {\n  sectionWrapper: {\n    as: 'section',\n    pt: ['60px', '80px', '80px', '80px', '120px'],\n    pb: ['20px', '20px', '20px', '80px']\n  },\n  row: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    ml: '-15px',\n    mr: '-15px',\n    alignItems: 'center'\n  },\n  secTitleWrapper: {\n    mb: ['50px', '75px']\n  },\n  secText: {\n    content: 'PRICING PLAN',\n    as: 'span',\n    display: 'block',\n    textAlign: 'center',\n    fontSize: '14px',\n    letterSpacing: '0.15em',\n    fontWeight: '700',\n    color: '#5268db',\n    mb: '10px'\n  },\n  secHeading: {\n    content: 'Whatâ€™s our monthly pricing subscription',\n    textAlign: 'center',\n    fontSize: ['20px', '24px'],\n    fontWeight: '500',\n    color: 'headingColor',\n    letterSpacing: '-0.025em',\n    mb: '0'\n  },\n  col: {\n    width: [1, 1 / 2, 1 / 2, 1 / 3],\n    pr: '15px',\n    pl: '15px'\n  },\n  nameStyle: {\n    fontSize: ['20px', '20px', '22px', '22px', '22px'],\n    fontWeight: '500',\n    color: 'headingColor',\n    letterSpacing: '-0.025em',\n    textAlign: 'center',\n    mb: '12px'\n  },\n  descriptionStyle: {\n    fontSize: ['15px', '16px', '16px', '16px', '16px'],\n    color: 'textColor',\n    lineHeight: '1.75',\n    textAlign: 'center',\n    mb: '0'\n  },\n  priceStyle: {\n    as: 'span',\n    display: 'block',\n    fontSize: ['36px', '36px', '40px', '40px', '40px'],\n    color: 'headingColor',\n    textAlign: 'center',\n    mb: '5px',\n    letterSpacing: '-0.025em'\n  },\n  priceLabelStyle: {\n    fontSize: ['13px', '14px', '14px', '14px', '14px'],\n    color: 'textColor',\n    lineHeight: '1.75',\n    textAlign: 'center',\n    mb: '0'\n  },\n  buttonStyle: {\n    type: 'button',\n    fontSize: '14px',\n    fontWeight: '600',\n    borderRadius: '4px',\n    pl: '10px',\n    pr: '10px',\n    colors: 'primary',\n    width: '222px',\n    maxWidth: '100%'\n  },\n  buttonFillStyle: {\n    type: 'button',\n    fontSize: '14px',\n    fontWeight: '600',\n    color: 'white',\n    borderRadius: '4px',\n    pl: '10px',\n    pr: '10px',\n    colors: 'primaryWithBg',\n    width: '200px',\n    maxWidth: '100%'\n  },\n  listContentStyle: {\n    fontSize: ['15px', '16px', '16px', '16px', '16px'],\n    color: 'textColor',\n    mb: '0'\n  }\n};\nexport default PricingSection;","map":null,"metadata":{},"sourceType":"module"}