{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Icon from 'react-icons-kit';\nimport Fade from 'react-reveal/Fade';\nimport Box from 'common/src/components/Box';\nimport Text from 'common/src/components/Text';\nimport Heading from 'common/src/components/Heading';\nimport Button from 'common/src/components/Button';\nimport Switch from 'common/src/components/Switch';\nimport Container from 'common/src/components/UI/Container';\nimport GlideCarousel from 'common/src/components/GlideCarousel';\nimport GlideSlide from 'common/src/components/GlideCarousel/glideSlide';\nimport { MONTHLY_PRICING_TABLE, YEARLY_PRICING_TABLE } from 'common/src/data/Hosting/data';\nimport PricingTable, { PricingHead, PricingPrice, PricingButton, PricingList, ListItem, SwitchWrapper } from './pricing.style';\nimport { checkmark } from 'react-icons-kit/icomoon/checkmark';\n\nvar PricingSection = function PricingSection(_ref) {\n  var _jsx;\n\n  var sectionWrapper = _ref.sectionWrapper,\n      row = _ref.row,\n      secTitleWrapper = _ref.secTitleWrapper,\n      secHeading = _ref.secHeading,\n      secText = _ref.secText,\n      nameStyle = _ref.nameStyle,\n      descriptionStyle = _ref.descriptionStyle,\n      priceStyle = _ref.priceStyle,\n      priceLabelStyle = _ref.priceLabelStyle,\n      buttonStyle = _ref.buttonStyle,\n      buttonFillStyle = _ref.buttonFillStyle,\n      listContentStyle = _ref.listContentStyle;\n\n  var _useState = useState({\n    toggle: true,\n    data: MONTHLY_PRICING_TABLE\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setLoading(true);\n    }, 500);\n  });\n\n  var dataHandle = function dataHandle() {\n    setState(_objectSpread({}, state, {\n      toggle: !state.toggle\n    }));\n  };\n\n  var pricingCarouselOptions = {\n    type: 'slider',\n    perView: 3,\n    gap: 30,\n    bound: true,\n    breakpoints: {\n      1199: {\n        perView: 2,\n        type: 'carousel',\n        peek: {\n          before: 100,\n          after: 100\n        }\n      },\n      990: {\n        type: 'carousel',\n        perView: 1,\n        peek: {\n          before: 150,\n          after: 150\n        }\n      },\n      767: {\n        type: 'carousel',\n        perView: 1,\n        peek: {\n          before: 80,\n          after: 80\n        }\n      },\n      575: {\n        type: 'carousel',\n        perView: 1,\n        gap: 15,\n        peek: {\n          before: 20,\n          after: 20\n        }\n      }\n    }\n  };\n  return __jsx(Box, sectionWrapper, __jsx(Container, null, __jsx(Box, secTitleWrapper, __jsx(Fade, {\n    bottom: true,\n    cascade: true\n  }, __jsx(Text, _extends({}, secText, {\n    content: \"PRICING PLAN\"\n  })), __jsx(Heading, _extends({}, secHeading, {\n    content: \"What\\u2019s our monthly pricing subscription\"\n  })), __jsx(SwitchWrapper, null, __jsx(Switch, (_jsx = {\n    labelPosition: \"bottom\",\n    switchColor: \"#f0f0f0\",\n    barColor: \"#f0f0f0\",\n    labelText: \"Show Pricing plan annually\"\n  }, _defineProperty(_jsx, \"labelPosition\", \"left\"), _defineProperty(_jsx, \"onChange\", dataHandle), _jsx))))), __jsx(Box, row, __jsx(GlideCarousel, {\n    carouselSelector: \"pricing-carousel\",\n    options: pricingCarouselOptions,\n    controls: false\n  }, state.toggle === true ? __jsx(React.Fragment, null, MONTHLY_PRICING_TABLE.map(function (pricingTable, index) {\n    return __jsx(GlideSlide, {\n      key: \"pricing-table-\".concat(index)\n    }, __jsx(PricingTable, {\n      freePlan: pricingTable.freePlan,\n      className: \"pricing_table\"\n    }, __jsx(PricingHead, null, __jsx(Heading, _extends({\n      content: pricingTable.name\n    }, nameStyle)), __jsx(Text, _extends({\n      content: pricingTable.description\n    }, descriptionStyle))), __jsx(PricingPrice, null, __jsx(Text, _extends({\n      content: pricingTable.price\n    }, priceStyle)), __jsx(Text, _extends({\n      content: pricingTable.priceLabel\n    }, priceLabelStyle))), __jsx(PricingButton, null, __jsx(Link, {\n      href: pricingTable.url\n    }, __jsx(\"a\", null, pricingTable.freePlan ? __jsx(Button, _extends({\n      title: pricingTable.buttonLabel\n    }, buttonStyle)) : __jsx(Button, _extends({\n      title: pricingTable.buttonLabel\n    }, buttonFillStyle))))), __jsx(PricingList, null, pricingTable.listItems.map(function (item, index) {\n      return __jsx(ListItem, {\n        key: \"pricing-table-list-\".concat(index)\n      }, __jsx(Icon, {\n        icon: checkmark,\n        className: \"price_list_icon\",\n        size: 13\n      }), __jsx(Text, _extends({\n        content: item.content\n      }, listContentStyle)));\n    }))));\n  })) : __jsx(React.Fragment, null, YEARLY_PRICING_TABLE.map(function (pricingTable, index) {\n    return __jsx(GlideSlide, {\n      key: \"pricing-table-\".concat(index)\n    }, __jsx(PricingTable, {\n      freePlan: pricingTable.freePlan,\n      className: \"pricing_table\"\n    }, __jsx(PricingHead, null, __jsx(Heading, _extends({\n      content: pricingTable.name\n    }, nameStyle)), __jsx(Text, _extends({\n      content: pricingTable.description\n    }, descriptionStyle))), __jsx(PricingPrice, null, __jsx(Text, _extends({\n      content: pricingTable.price\n    }, priceStyle)), __jsx(Text, _extends({\n      content: pricingTable.priceLabel\n    }, priceLabelStyle))), __jsx(PricingButton, null, __jsx(Link, {\n      href: pricingTable.url\n    }, __jsx(\"a\", null, pricingTable.freePlan ? __jsx(Button, _extends({\n      title: pricingTable.buttonLabel\n    }, buttonStyle)) : __jsx(Button, _extends({\n      title: pricingTable.buttonLabel\n    }, buttonFillStyle))))), __jsx(PricingList, null, pricingTable.listItems.map(function (item, index) {\n      return __jsx(ListItem, {\n        key: \"pricing-table-list-\".concat(index)\n      }, __jsx(Icon, {\n        icon: checkmark,\n        className: \"price_list_icon\",\n        size: 13\n      }), __jsx(Text, _extends({\n        content: item.content\n      }, listContentStyle)));\n    }))));\n  }))))));\n};\n\nPricingSection.defaultProps = {\n  sectionWrapper: {\n    as: 'section',\n    pt: ['60px', '80px', '80px', '80px', '150px'],\n    pb: ['40px', '40px', '40px', '40px']\n  },\n  row: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    alignItems: 'center'\n  },\n  secTitleWrapper: {\n    mb: ['50px', '50px', '60px', '75px']\n  },\n  secText: {\n    as: 'span',\n    display: 'block',\n    textAlign: 'center',\n    fontSize: '14px',\n    letterSpacing: '0.15em',\n    fontWeight: '700',\n    color: '#eb4d4b',\n    mb: '10px'\n  },\n  secHeading: {\n    textAlign: 'center',\n    fontSize: ['20px', '24px'],\n    fontWeight: '400',\n    color: 'headingColor',\n    letterSpacing: '-0.025em',\n    mb: '0'\n  },\n  col: {\n    width: [1, 1 / 2, 1 / 2, 1 / 3],\n    pr: '15px',\n    pl: '15px'\n  },\n  nameStyle: {\n    fontSize: ['18px', '20px', '22px', '22px', '22px'],\n    fontWeight: '500',\n    color: 'headingColor',\n    letterSpacing: '-0.025em',\n    textAlign: 'center',\n    mb: '12px'\n  },\n  descriptionStyle: {\n    fontSize: ['14px', '16px', '16px', '16px', '16px'],\n    color: 'textColor',\n    lineHeight: '1.75',\n    textAlign: 'center',\n    mb: '0'\n  },\n  priceStyle: {\n    as: 'span',\n    display: 'block',\n    fontSize: ['32px', '36px', '40px', '40px', '40px'],\n    color: 'headingColor',\n    textAlign: 'center',\n    mb: '5px',\n    letterSpacing: '-0.025em'\n  },\n  priceLabelStyle: {\n    fontSize: ['13px', '14px', '14px', '14px', '14px'],\n    color: 'textColor',\n    lineHeight: '1.75',\n    textAlign: 'center',\n    mb: '0'\n  },\n  buttonStyle: {\n    type: 'button',\n    fontSize: ['13px', '14px', '14px', '14px', '14px'],\n    fontWeight: '600',\n    borderRadius: '4px',\n    pl: '10px',\n    pr: '10px',\n    colors: 'primary',\n    width: '222px',\n    maxWidth: '100%'\n  },\n  buttonFillStyle: {\n    type: 'button',\n    fontSize: '14px',\n    fontWeight: '600',\n    color: '#fff!important',\n    borderRadius: '4px',\n    pl: '10px',\n    pr: '10px',\n    colors: 'primaryWithBg',\n    width: '200px',\n    maxWidth: '100%'\n  },\n  listContentStyle: {\n    fontSize: ['14px', '16px', '16px', '16px', '16px'],\n    color: 'textColor',\n    mb: '0'\n  }\n};\nexport default PricingSection;","map":null,"metadata":{},"sourceType":"module"}